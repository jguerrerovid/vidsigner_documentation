{
  "openapi": "3.0.3",
  "info": {
    "title": "VIDconnect API",
    "description": "VIDconnect API provides the interface to interact with Open ID Connect component used to authenticate users and/or validate verifiable presentation provided by holders.",
    "version": "0.0.1",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://dev.vidchain.net",
      "description": "VIDchain Development Environment"
    }
  ],
  "tags": [
    {
      "name": "OAuth2 Service",
      "description": "The client redirects the user to VIDconnect using auth endpoint. Once the user has authenticated using his/her wallet, VIDconnect will redirect the user session to the callback URL providing the code. Finally, the token can be retrieved."
    }
  ],
  "paths": {
    "/oauth2/auth": {
      "post": {
        "operationId": "post-oauth2-auth",
        "tags": ["OAuth2 Service"],
        "summary": "Redirect the user to VIDconnect",
        "description": "The client redirects the user to VIDconnect.",
        "parameters": [
          {
            "in": "query",
            "name": "response_type",
            "schema": {
              "type": "string",
              "description": "response type",
              "example": "code"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "type": "string",
              "description": "random string",
              "example": "08bd09b6-8544-4f8b-9aef-bdd6f17db6f7"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "schema": {
              "type": "string",
              "description": "Client callback URL",
              "example": "https://swaggerEntity.com/callback"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "client_id",
            "schema": {
              "type": "string",
              "description": "VIDconnect Client ID",
              "example": "swaggerEntity"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "scope",
            "schema": {
              "type": "string",
              "description": "accepted scopes",
              "example": "openid VerifiableId EmailCredential"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "nonce",
            "schema": {
              "type": "string",
              "description": "random string",
              "example": "a8d84bc5-1c09-484b-9638-81baf028dfb2"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful redirected to VIDconnect portal"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Problem" },
                "examples": {
                  "Bad Request": { "$ref": "#/components/examples/BadRequest" }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Problem" },
                "examples": {
                  "Internal Server Error": {
                    "$ref": "#/components/examples/InternalError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "operationId": "post-oauth2-token",
        "tags": ["OAuth2 Service"],
        "summary": "Get information token from VIDconnect once the user has authenticated",
        "description": "The client has received the code via callback URL and it is ready to request the JWT that contains the information presented by the user, either the did or a verifiable presentation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/oauth2token" },
              "example": {
                "code": "q3JsH7j9fZDJ5lmOJuJO13fucaNbVy-o2VzsjSKKOm8.C_fAtYywbmjGx1lEpsP1sPL-1__GNtsPH7iMASg5Z5A",
                "client_id": "swaggerEntity",
                "client_secret": "dCpIItDeklj0ejNs-9zutUncdp",
                "redirect_uri": "https://swaggerEntity.com/callback",
                "grant_type": "authorization_code"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "EBGGtITnZbmyFyO0bLJ1ZGn_XWH31HeNqrW1dTVfKcY.IQdHy9HgLdKdeJ-gsIa-GB-6OiY597tFOk_VV4hYRC4",
                  "expires_in": 3599,
                  "id_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6InB1YmxpYzozYTFlM2RkYS1iOWVhLTQwYjctOGEwOS0wYjY5ZWQwZDMxMTYiLCJ0eXAiOiJKV1QifQ..eW8bHQmiByHOy2BZHAlub8X_dtXevF1Ga-bi83nscmZuVJ3bs4pZ3SuHS1oekTn_nR8GHkEwn1sn2ydvh5OXq9s1zpaxgKSgA-EMqfcUlJw3rmKBhtrYY-nMwtJolSPAfeWJ_16_I3WpMbujTYazpPYA6-3X6iD7B4gE5JVaLbb5QUy6eixv9qNWAdoLyxvTS4JgIZU5Kbfzr9aE4AEKkp5-5xbFQDGQZxtIC5OIRPDBR3m7lFwkUTGzHl9GlvyQh5LsBspumaI5-12K4H7PVDGYM3VaqZf90v3kEG7JDbI6vaMh3eRr37v9c1vEyG9yidfnkf1-I9aAxgs7nHu8Jdq7RYgp4nLnDK5NLGm4LEBPzgBGUZIXvm1y9lExHPX2enwsUWGME26qycSIAEWfXXut4WPxJObuQMSblcpEezes--8xSckI5AyPaJHMwEDpWKuDzqBZbWp8c9TNRdz9LOD98nDOuMEUAfHbwRhCR04mXvjleqPHIk5XnojZpSeC-HVVKzGXcR24QVJbyACuXBlmkEDxdPaboDQf5PU7-ba9-9GamoOulKqNjO46AW_ltUUHjolKNjp8Z1HLHku5UY9JIdhRO2JrV9n2k0Pq014Cs4lLCt5fouvSXxgfom2UFsLVo7EGM7TN0KpWmQCdzS28-0yDAonnO6fPxPqyp7s",
                  "scope": "openid VerifiableIdCredential EmailCredential",
                  "token_type": "bearer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Problem" },
                "examples": {
                  "Bad Request": { "$ref": "#/components/examples/BadRequest" }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": { "$ref": "#/components/schemas/Problem" },
                "examples": {
                  "Internal Server Error": {
                    "$ref": "#/components/examples/InternalError"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Problem": {
        "description": "A Problem Details object (RFC 7807)",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the problem type. When dereferenced,\nit SHOULD provide human-readable documentation for the problem type.\n",
            "default": "about:blank"
          },
          "title": {
            "type": "string",
            "description": "A short summary of the problem type.\n",
            "example": "Internal Server Error"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.\n",
            "minimum": 400,
            "maximum": 600,
            "exclusiveMaximum": true,
            "example": 500
          },
          "detail": {
            "type": "string",
            "description": "A human readable explanation specific to this occurrence of the problem.\n",
            "example": "Connection timeout"
          },
          "instance": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n"
          }
        }
      },
      "oauth2token": {
        "description": "get token request body",
        "type": "object",
        "properties": {
          "code": {
            "description": "Code obtained via callback URL",
            "type": "string",
            "example": "q3JsH7j9fZDJ5lmOJuJO13fucaNbVy-o2VzsjSKKOm8.C_fAtYywbmjGx1lEpsP1sPL-1__GNtsPH7iMASg5Z5A"
          },
          "client_id": {
            "description": "Client id",
            "type": "string",
            "example": "swaggerEntity"
          },
          "client_secret": {
            "description": "Client secret",
            "type": "string",
            "example": "dCpIItDeklj0ejNs-9zutUncdp"
          },
          "redirect_uri": {
            "description": "Same Callback URL where code was provided",
            "type": "string",
            "example": "https://swaggerEntity.com/callback"
          },
          "grant_type": {
            "description": "Grant type",
            "type": "string",
            "example": "authorization_code"
          }
        }
      }
    },
    "examples": {
      "BadRequest": {
        "value": {
          "title": "Bad Request",
          "status": 400,
          "detail": "Bad request."
        }
      },
      "Unauthorized": {
        "value": {
          "title": "Unauthorized",
          "status": 401,
          "detail": "Permission denied."
        }
      },
      "Forbidden": {
        "value": {
          "title": "Forbidden",
          "status": 403,
          "detail": "Forbidden You don't have the right to access that ressource"
        }
      },
      "InternalError": {
        "value": {
          "title": "Internal Server Error",
          "status": 500,
          "detail": "The server encountered an internal error and was unable to complete your request."
        }
      }
    }
  }
}
